#!/bin/sh

DOTFILES="$HOME/.dotfiles"

usage() {
    echo "Usage: dotfiles <command> [args]"
    echo
    echo "Commands:"
    echo "  setup             Symlink all dotfiles from ~/.dotfiles into \$HOME"
    echo "  link <file>       Add the appropriate symlink for a file in ~/.dotfiles into \$HOME"
    echo "  add <file>        Add a file to the dotfiles repo and replace it with a symlink"
    echo "  git <args>        Run git inside the dotfiles repo"
    echo "  help              Show this very text"
    exit 1
}

setup_dotfiles() {
    EXCLUDES=".git .gitignore dotfiles README.md"
    HOST_EXCLUDES=".local/bin/lift"  # files not to link on secondary (non-main) hosts

    cd "$DOTFILES" || exit 1

    find . -type f | while read -r file; do
        rel_path="${file#./}"
        skip=false

        # global excludes
        for exclude in $EXCLUDES; do
            case "$rel_path" in
                $exclude* ) skip=true; break ;;
            esac
        done
        $skip && continue

        # host-specific excludes
        case "$(hostname)" in
            december)
                for exclude in $HOST_EXCLUDES; do
                    case "$rel_path" in
                        $exclude* ) skip=true; break ;;
                    esac
                done
                ;;
        esac
        $skip && continue

        target_path="$HOME/$rel_path"

        mkdir -p "$(dirname "$target_path")"
        ln -sfn "$DOTFILES/$rel_path" "$target_path"
        echo "Linked $rel_path -> $target_path"
    done
}

link_dotfile() {
    [ -z "$1" ] && echo "Usage: dotfiles link <file>" && exit 1

    rel_path="$1"
    source_path="$DOTFILES/$rel_path"
    target_path="$HOME/$rel_path"

    [ ! -f "$source_path" ] && echo "Error: $source_path does not exist or is not a regular file." && exit 1
    [ "$source_path" -ef "$target_path" ] && echo "Already linked: $rel_path" && return

    mkdir -p "$(dirname "$target_path")"
    ln -sfn "$source_path" "$target_path"
    echo "Linked $rel_path -> $target_path"
}

add_dotfile() {
    [ -z "$1" ] && echo "Usage: dotfiles add <file>" && exit 1

    rel_path="$1"
    abs_source_path="$(realpath -m "$rel_path")" || exit 1
    rel_home_path="${abs_source_path#$HOME/}"

    target_path="$DOTFILES/$rel_home_path"

    [ ! -e "$abs_source_path" ] && echo "Error: $abs_source_path does not exist." && exit 1

    mkdir -p "$(dirname "$target_path")"
    mv "$abs_source_path" "$target_path"
    ln -sfn "$target_path" "$abs_source_path"

    cd "$DOTFILES" || exit 1
    git add "$rel_home_path"
    echo "Added $rel_home_path to dotfiles and created symlink."
}

git_dotfiles() {
    [ $# -eq 0 ] && echo "Usage: dotfiles git <git-commands>" && exit 1

    cd "$DOTFILES" || exit 1
    git "$@"
}

case "$1" in
    setup) shift; setup_dotfiles ;;
    link) shift; link_dotfile "$1" ;;
    add) shift; add_dotfile "$1" ;;
    git) shift; git_dotfiles "$@" ;;
    help) usage ;;
    *) usage ;;
esac
